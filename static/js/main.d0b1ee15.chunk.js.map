{"version":3,"sources":["utility/Spinner/Spinner.js","App.js","reducers/authReducer.js","reducers/siteModal.js","reducers/rootReducer.js","index.js"],"names":["library","add","faSpinner","Spinner","className","icon","size","spin","Component","NavBar","lazy","Home","SingleFullVenue","Modal","CityVenue","SingleActivity","PaymentSuccess","Account","Search","App","basename","fallback","path","component","exact","x","state","action","type","payload","initState","openclose","content","rootReducer","combineReducers","auth","authReducer","siteModal","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","theStore","applyMiddleware","reduxPromise","createStore","persistor","persistStore","ReactDOM","render","store","loading","document","getElementById"],"mappings":"qMAMAA,IAAQC,IAAIC,K,IAENC,E,4JACJ,WACE,OACE,qBAAKC,UAAU,kBAAf,SACE,cAAC,IAAD,CAAiBC,KAAK,UAAUC,KAAK,KAAKC,MAAI,U,GAJhCC,aAUPL,O,gNCdTM,EAASC,gBAAK,kBAAM,+DACpBC,EAAOD,gBAAK,kBAAM,8DAClBE,EAAkBF,gBAAK,kBAC3B,qEAEIG,EAAQH,gBAAK,kBAAM,kCACnBI,EAAYJ,gBAAK,kBAAM,wDACvBK,EAAiBL,gBAAK,kBAAM,wDAC5BM,EAAiBN,gBAAK,kBAC1B,+DAEIO,EAAUP,gBAAK,kBAAM,sEACrBQ,EAASR,gBAAK,kBAAM,8DA2BXS,E,4JAzBb,WACE,OAEE,aADA,CACC,IAAD,CAAQC,SAAS,UAAjB,SACE,eAAC,WAAD,CAAUC,SAAU,cAAClB,EAAA,EAAD,IAApB,UACE,cAAC,IAAD,CAAOmB,KAAK,IAAIC,UAAWd,IAC3B,cAAC,IAAD,CAAOe,OAAK,EAACF,KAAK,IAAIC,UAAWZ,IACjC,cAAC,IAAD,CAAOa,OAAK,EAACF,KAAK,eAAeC,UAAWX,IAC5C,cAAC,IAAD,CAAOY,OAAK,EAACF,KAAK,kBAAkBC,UAAWT,IAC/C,cAAC,IAAD,CAAOU,OAAK,EAACF,KAAK,gBAAgBC,UAAWR,IAC7C,cAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWN,IAClC,cAAC,IAAD,CACEO,OAAK,EACLF,KAAK,gCACLC,UAAWP,IAEb,cAAC,IAAD,CAAOM,KAAK,sBAAsBC,UAAWL,IAC7C,cAAC,IAAD,CAAOI,KAAK,IAAIC,UAAWV,a,GAlBnBL,a,gCCRHiB,MATf,WAAgC,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC7B,MAAoB,oBAAhBA,EAAOC,KACFD,EAAOE,QACW,WAAhBF,EAAOC,KACT,GAEAF,GCNLI,EAAY,CAAEC,UAAW,SAAUC,QAAS,IAQnCP,MANf,WAAuC,IAA5BC,EAA2B,uDAAnBI,EAAWH,EAAQ,uCACpC,MAAoB,eAAhBA,EAAOC,KACFD,EAAOE,QAETH,GCEMO,EALKC,YAAgB,CAClCC,KAAMC,EACNC,UAAWA,I,yCCUPC,EAAgB,CACpBC,IAAK,OACLC,YACAC,gBAAiBC,KAEbC,EAAmBC,YAAeN,EAAeL,GACjDY,EAAWC,YAAgBC,IAAhBD,CAA8BE,IAA9BF,CAA2CH,GACtDM,EAAYC,YAAaL,GAC/BM,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOR,EAAjB,SACE,cAAC,IAAD,CAAaS,QAAS,cAACnD,EAAA,EAAD,IAAa8C,UAAWA,EAA9C,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.d0b1ee15.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nlibrary.add(faSpinner);\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"spinner-wrapper\">\r\n        <FontAwesomeIcon icon=\"spinner\" size=\"6x\" spin />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n// npm i --save @fortawesome/fontawesome-svg-core\r\n//   npm install --save @fortawesome/free-solid-svg-icons\r\n//   npm install --save @fortawesome/react-fontawesome\r\n","import \"./App.css\";\nimport React, { Component, lazy, Suspense } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Spinner from \"./utility/Spinner/Spinner\";\nconst NavBar = lazy(() => import(\"./utility/NavBar/NavBar\"));\nconst Home = lazy(() => import(\"./pages/Home/Home\"));\nconst SingleFullVenue = lazy(() =>\n  import(\"./pages/SinglePageVenues/SingleFullVenue\")\n);\nconst Modal = lazy(() => import(\"./utility/Modal/Modal\"));\nconst CityVenue = lazy(() => import(\"./pages/cityVenues/CityVenue\"));\nconst SingleActivity = lazy(() => import(\"./pages/Activity/SingleActivity\"));\nconst PaymentSuccess = lazy(() =>\n  import(\"./pages/payementSuccess/PaymentSuccess\")\n);\nconst Account = lazy(() => import(\"./pages/Accounts/Account\"));\nconst Search = lazy(() => import(\"./pages/Search/Search\"));\nclass App extends Component {\n  render() {\n    return (\n      // <div className=\"App\">\n      <Router basename=\"/airbnb\">\n        <Suspense fallback={<Spinner />}>\n          <Route path=\"/\" component={NavBar} />\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/venues/:vid\" component={SingleFullVenue} />\n          <Route exact path=\"/city/:cityName\" component={CityVenue} />\n          <Route exact path=\"/activity/:id\" component={SingleActivity} />\n          <Route path=\"/account\" component={Account} />\n          <Route\n            exact\n            path=\"/payment-success/:stripeToken\"\n            component={PaymentSuccess}\n          />\n          <Route path=\"/search/:searchTerm\" component={Search} />\n          <Route path=\"/\" component={Modal} />\n        </Suspense>\n      </Router>\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","function x(state = {}, action) {\r\n  if (action.type === \"REGISTER_ACTION\") {\r\n    return action.payload;\r\n  } else if (action.type === \"LOGOUT\") {\r\n    return {};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\nexport default x;\r\n","const initState = { openclose: \"closed\", content: \"\" };\r\n\r\nfunction x(state = initState, action) {\r\n  if (action.type === \"OPEN_MODAL\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n}\r\nexport default x;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport siteModal from \"./siteModal\";\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  siteModal: siteModal,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Spinner from \"./utility/Spinner/Spinner\";\n//redux setup\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reduxPromise from \"redux-promise\";\nimport rootReducer from \"./reducers/rootReducer\";\n//redux persist setup\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  stateReconciler: autoMergeLevel2,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst theStore = applyMiddleware(reduxPromise)(createStore)(persistedReducer);\nconst persistor = persistStore(theStore);\nReactDOM.render(\n  <Provider store={theStore}>\n    <PersistGate loading={<Spinner />} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}